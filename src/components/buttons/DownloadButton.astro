---
interface downloadProps {
    src: string;
    title: string;
    downloadItem: string;
};

interface downloadComponent {
    buttonInfo: downloadProps;
};

const { buttonInfo } = Astro.props;
---

<a
    class="inline-flex gap-1 items-center justify-center bg-orange-400 font-bold p-3 rounded-2xl my-2 text-black hover:bg-orange-500"
    href={ buttonInfo.src }
    download={ buttonInfo.downloadItem }
    ><svg
        xmlns="http://www.w3.org/2000/svg"
        width="35px"
        height="35px"
        viewBox="0 0 24 24"
        ><g
        fill="none"
        stroke="currentColor"
        stroke-linecap="round"
        stroke-linejoin="round"
        stroke-width="2"
        ><path
            fill="currentColor"
            fill-opacity="0"
            stroke-dasharray="20"
            stroke-dashoffset="20"
            d="M12 4h2v6h2.5l-4.5 4.5M12 4h-2v6h-2.5l4.5 4.5"
            ><animate
            attributeName="d"
            begin="0.5s"
            dur="1.5s"
            repeatCount="indefinite"
            values="M12 4h2v6h2.5l-4.5 4.5M12 4h-2v6h-2.5l4.5 4.5;M12 4h2v3h2.5l-4.5 4.5M12 4h-2v3h-2.5l4.5 4.5;M12 4h2v6h2.5l-4.5 4.5M12 4h-2v6h-2.5l4.5 4.5"
            ></animate><animate
            fill="freeze"
            attributeName="fill-opacity"
            begin="0.7s"
            dur="0.5s"
            values="0;1"></animate><animate
            fill="freeze"
            attributeName="stroke-dashoffset"
            dur="0.4s"
            values="20;0"></animate></path>
            <path stroke-dasharray="14" stroke-dashoffset="14" d="M6 19h12">
            <animate
            fill="freeze"
            attributeName="stroke-dashoffset"
            begin="0.5s"
            dur="0.2s"
            values="14;0">
            </animate>
            </path
        ></g
        ></svg>
    { buttonInfo.title }
</a>
